SELECT *
FROM CovidDeaths
ORDER BY 3,4 

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER BY 3

-- Death Rate 

SELECT location, date, total_cases, total_deaths, (100.0*total_deaths/total_cases) AS DeathRate
FROM CovidDeaths
ORDER BY 1,2

-- Infection Rate

SELECT location, date, population, total_cases, (100.0*total_cases/population) AS InfectionRate
FROM CovidDeaths
ORDER BY 1,2

-- Countries with highest infection rate

SELECT location, population, MAX(total_cases) as HighestCases, MAX((100.0*total_cases/population)) as HighestInfectionRate
FROM CovidDeaths
GROUP BY location, population
ORDER BY HighestInfectionRate desc

-- Countries with highest death rate

SELECT location, population, MAX(total_deaths) as TotalDeaths, MAX((100.0*total_deaths/population)) as HighestDeathRate
FROM CovidDeaths
WHERE population > 0
AND continent is not null
GROUP BY location, population
ORDER BY HighestDeathRate desc

-- Regions with highest death rate

SELECT location, MAX(total_deaths) as TotalDeaths
FROM CovidDeaths
WHERE len(continent) < 4
and population > 0
GROUP BY location
ORDER BY TotalDeaths desc

-- GLOBAL NUMBERS

SELECT date, SUM(cast(new_cases as int)) as TotalCases, SUM(cast(new_deaths as int)) as TotalDeaths, SUM(cast(new_deaths as int))/SUM(cast(new_cases as int))*100.0 as DeathRate
FROM CovidDeaths
WHERE continent is not null
GROUP BY date
ORDER BY 1,2

-- Total Population vs vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaxCount
FROM CovidDeaths dea
Join CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3

-- Use CTE

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingVaxCount)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaxCount
FROM CovidDeaths dea
Join CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
AND dea.population > 0
)
Select *, (100.0*RollingVaxCount/Population) as PopVaxRate
FROM PopvsVac
ORDER BY 2,3

-- Temp Table

DROP TABLE IF EXISTS #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255), 
Location nvarchar(255), 
Date date, 
Population bigint, 
New_Vaccinations int, 
RollingVaxCount int
)

Create View PercentPopulationVaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as RollingVaxCount
FROM CovidDeaths dea
Join CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
AND dea.population > 0

Select *, (100.0*RollingVaxCount/Population) as PopVaxRate
FROM #PercentPopulationVaccinated
ORDER BY 2,3

